name: Format and Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  format:
    name: Format and Test Python code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.12.0
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.0"
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            poetry.lock

      - name: Install Dependencies with pip
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -U poetry

      - name: Configure Poetry
        shell: bash
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Dependencies with Poetry
        shell: bash
        run: |
          poetry install --no-interaction --no-root

      - name: Format with black
        shell: bash
        run: |
          poetry run black .

      - name: Sort imports with isort
        shell: bash
        run: |
          poetry run isort .

      - name: Fix with ruff
        shell: bash
        run: |
          poetry run ruff check . --fix

      - name: Run tests with pytest
        shell: bash
        run: |
          poetry run pytest -v --cov --cov-report=xml --cov-branch
